% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generalisedPareto.R
\name{generalisedPareto}
\alias{generalisedPareto}
\alias{fitGP}
\alias{gpObsInfo}
\alias{logLikVector.GP}
\alias{nobs.GP}
\alias{coef.GP}
\alias{vcov.GP}
\alias{logLik.GP}
\title{Frequentist inference for the generalised Pareto distribution}
\usage{
fitGP(data, u)

gpObsInfo(pars, excesses, eps = 1e-05, m = 3)

\method{logLikVector}{GP}(object, pars = NULL, ...)

\method{nobs}{GP}(object, ...)

\method{coef}{GP}(object, ...)

\method{vcov}{GP}(object, ...)

\method{logLik}{GP}(object, ...)
}
\arguments{
\item{data}{A numeric vector of raw data.  Missing values are removed using
\code{\link[stats:na.fail]{na.omit}}.}

\item{u}{A numeric scalar.  The extremal value threshold.}

\item{pars}{A numeric parameter vector of length 2 containing the values of
the generalised Pareto scale and shape parameters.}

\item{excesses}{A numeric vector of threshold excesses, that is, amounts
by which exceedances of \code{u} exceed \code{u}.}

\item{eps, m}{These arguments control the estimation of the observed
information in \code{gpObsInfo} when the GP shape parameter \eqn{\xi} is
very close to zero.  In these cases, direct calculation is unreliable.
\code{eps} is a (small, positive) numeric scalar.  If the absolute value
of the input value of \eqn{\xi}, that is, \code{pars[2]}, is smaller than
\code{eps} then we approximate the \code{[2, 2]} element using a Taylor
series expansion in \eqn{\xi}, evaluated up to and including the
\code{m}th term.}

\item{object}{A fitted model object returned from \code{fitGP()}.}

\item{...}{Further arguments to be passed to the functions in the
sandwich package \code{\link[sandwich]{meat}} (if \code{cluster = NULL}),
or \code{\link[sandwich:vcovCL]{meatCL}} (if \code{cluster} is not
\code{NULL}).}
}
\value{
\code{fitGP} returns an object of class \code{"GP"}, a list
with components: \code{maxLogLik}, \code{threshold}, \code{mle},
\code{vcov}, \code{exceedances}, \code{nexc},
where \code{exceedances} is a vector containing the values that exceed the
threshold \code{threshold} and \code{nexc} is the length of this vector.


\code{gpObsInfo} returns a 2 by 2 matrix with row and columns names
\code{c("sigma[u]", "xi")}.
\code{nobs}, \code{coef}, \code{vcov} and \code{logLik} methods are
provided.

\code{logLikVector.GP} returns an object of class \code{"logLikVector"}, a
vector of length \code{length(data)} containing the likelihood contributions
from the individual observations in \code{data}.
}
\description{
Functions involved in making inferences about the scale and shape
parameters of a generalised Pareto distribution using maximum likelihood
estimation.
}
\details{
\code{fitGP}: fit a generalised Pareto distribution using maximum likelihood
  estimation.  This function calls \code{\link[revdbayes]{grimshaw_gp_mle}}.

\code{gpObsInfo}: calculates the observed information matrix for a random
sample \code{excesses} from the generalized Pareto distribution, that is,
the negated Hessian matrix of the generalized Pareto independence
log-likelihood, evaluated at \code{pars}.

\code{logLikVector.GP}: calculates contributions to an independence
log-likelihood based on the generalised Pareto distribution.
}
\examples{
got_exdex <- requireNamespace("exdex", quietly = TRUE)
if (got_exdex) {
 # Set up data and set a threshold
 cdata <- c(exdex::cheeseboro)

 # Fit a generalised Pareto distribution
 fit <- fitGP(cdata, 45)

 # Calculate the log-likelihood at the MLE
 res <- logLikVector(fit)

 # The logLik method sums the individual log-likelihood contributions.
 logLik(res)

 # nobs, coef, vcov, logLik methods for objects returned from fitGP()
 nobs(fit)
 coef(fit)
 vcov(fit)
 logLik(fit)
}
}
